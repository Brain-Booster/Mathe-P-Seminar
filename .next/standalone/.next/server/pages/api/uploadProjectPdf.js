"use strict";(()=>{var e={};e.id=292,e.ids=[292],e.modules={2616:e=>{e.exports=require("formidable")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},2048:e=>{e.exports=require("fs")},5315:e=>{e.exports=require("path")},6249:(e,r)=>{Object.defineProperty(r,"l",{enumerable:!0,get:function(){return function e(r,t){return t in r?r[t]:"then"in r&&"function"==typeof r.then?r.then(r=>e(r,t)):"function"==typeof r&&"default"===t?r:void 0}}})},9946:(e,r,t)=>{t.r(r),t.d(r,{config:()=>y,default:()=>A,routeModule:()=>g});var o={};t.r(o),t.d(o,{config:()=>f,default:()=>m});var n=t(1802),s=t(7153),i=t(6249),a=t(2048),l=t.n(a),d=t(5315),u=t.n(d),c=t(2616),p=t.n(c);require("mime-types");let f={api:{bodyParser:!1}},P=e=>{try{l().existsSync(e)||l().mkdirSync(e,{recursive:!0})}catch(e){throw console.error("Error creating directory:",e),e}};async function m(e,r){if(r.setHeader("Access-Control-Allow-Origin","*"),r.setHeader("Access-Control-Allow-Methods","POST, OPTIONS"),r.setHeader("Access-Control-Allow-Headers","Content-Type"),"OPTIONS"===e.method){r.status(200).end();return}if("POST"!==e.method){r.setHeader("Allow",["POST","OPTIONS"]),r.status(405).end(`Method ${e.method} Not Allowed`);return}try{let t=u().join(process.cwd(),"public","uploads","pdfs");P(t),new(p()).IncomingForm({uploadDir:t,keepExtensions:!0,maxFileSize:20971520}).parse(e,async(e,o,n)=>{if(e)return(console.error("Error parsing form:",e),"LIMIT_FILE_SIZE"===e.code)?r.status(413).json({error:"File too large",details:"Maximum size is 20MB"}):r.status(500).json({error:"Upload failed",details:e.message});let s=n.file;if(!s)return r.status(400).json({error:"No file uploaded"});if("application/pdf"!==s.mimetype)return l().unlinkSync(s.filepath),r.status(415).json({error:"Invalid file type",details:"Only PDF files are allowed."});try{let e=Date.now(),o=`project-pdf-${e}.pdf`,n=s.filepath,i=u().join(t,o);l().renameSync(n,i);let a=`/uploads/pdfs/${o}`;r.status(200).json({fileUrl:a,filename:o})}catch(e){try{l().unlinkSync(newPath)}catch(e){console.error("Error deleting file after rename error:",e)}console.error("Error processing uploaded file:",e),r.status(500).json({error:"File processing failed",details:e.message})}})}catch(e){console.error("Upload error:",e),r.status(500).json({error:"Upload failed",details:e.message})}}let A=(0,i.l)(o,"default"),y=(0,i.l)(o,"config"),g=new n.PagesAPIRouteModule({definition:{kind:s.x.PAGES_API,page:"/api/uploadProjectPdf",pathname:"/api/uploadProjectPdf",bundlePath:"",filename:""},userland:o})},7153:(e,r)=>{var t;Object.defineProperty(r,"x",{enumerable:!0,get:function(){return t}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(t||(t={}))},1802:(e,r,t)=>{e.exports=t(145)}};var r=require("../../webpack-api-runtime.js");r.C(e);var t=r(r.s=9946);module.exports=t})();